#ifndef ODOMETRY_H
#define ODOMETRY_H

#include <utility>
#include <vector>

using namespace std;

/* store motion commands
 * angle_def -> total angle rotated
 * time_sec -> total time taken for linear traversal*/
struct MotionCommand {
  double angle_deg;
  double time_sec;
};

class Odometry {
public:
  Odometry(double wheel_radius, double rpm);

  /* Compute odometry commands
   * i.e. total time taken & angle rotated
   * param: path generated by planner
   * ret: total time and angle traversed in struct Motion Command */
  MotionCommand computeCommands(vector<pair<int, int>> &path);

private:
  double radius;     // wheel radius
  double rpm;        // wheel rpm (constant)
  double linear_vel; // rover vel

  double distance(int x1, int y1, int x2,
                  int y2);                      // distance between two coords
  double angle(int x1, int y1, int x2, int y2); // angle between two coords
};

#endif
